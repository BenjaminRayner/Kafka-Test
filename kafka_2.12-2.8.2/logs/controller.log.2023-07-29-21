[2023-07-29 21:08:57,411] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-29 21:08:57,423] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-07-29 21:08:57,425] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2023-07-29 21:08:57,441] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-07-29 21:08:57,443] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-29 21:08:57,445] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-29 21:08:57,446] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-07-29 21:08:57,453] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2023-07-29 21:08:57,457] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-07-29 21:08:57,460] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-07-29 21:08:57,464] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-07-29 21:08:57,464] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-07-29 21:08:57,465] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2023-07-29 21:08:57,465] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2023-07-29 21:08:57,465] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-29 21:08:57,466] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-29 21:08:57,466] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-07-29 21:08:57,466] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-29 21:08:57,467] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2023-07-29 21:08:57,467] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-29 21:08:57,473] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-29 21:08:57,474] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-29 21:08:57,477] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-29 21:08:57,477] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2023-07-29 21:08:57,477] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-29 21:08:57,477] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-29 21:08:57,478] INFO [RequestSendThread controllerId=0] Controller 0 connected to Ben-PC.:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-29 21:08:57,479] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2023-07-29 21:08:57,479] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-07-29 21:08:57,481] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-29 21:08:57,486] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-29 21:08:57,487] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-29 21:08:57,487] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-29 21:08:57,488] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-29 21:08:57,502] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-29 21:09:02,502] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-29 21:09:02,503] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-29 21:10:14,773] INFO [Controller id=0] New topics: [Set(output-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-brayner,None,Map(output-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-29 21:10:14,774] INFO [Controller id=0] New partition creation callback for output-brayner-0 (kafka.controller.KafkaController)
[2023-07-29 21:10:26,203] INFO [Controller id=0] New topics: [Set(student-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(student-brayner,None,Map(student-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-29 21:10:26,203] INFO [Controller id=0] New partition creation callback for student-brayner-0 (kafka.controller.KafkaController)
[2023-07-29 21:10:28,339] INFO [Controller id=0] New topics: [Set(classroom-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(classroom-brayner,None,Map(classroom-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-29 21:10:28,339] INFO [Controller id=0] New partition creation callback for classroom-brayner-0 (kafka.controller.KafkaController)
[2023-07-29 21:10:29,359] DEBUG [Controller id=0] Delete topics listener fired for topics output-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-29 21:10:29,359] INFO [Controller id=0] Starting topic deletion for topics output-brayner (kafka.controller.KafkaController)
[2023-07-29 21:10:29,361] INFO [Topic Deletion Manager 0] Handling deletion for topics output-brayner (kafka.controller.TopicDeletionManager)
[2023-07-29 21:10:29,362] INFO [Topic Deletion Manager 0] Deletion of topic output-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-29 21:10:29,387] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(output-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-29 21:10:29,387] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-29 21:10:29,388] INFO [Topic Deletion Manager 0] Handling deletion for topics output-brayner (kafka.controller.TopicDeletionManager)
[2023-07-29 21:10:29,399] INFO [Topic Deletion Manager 0] Deletion of topic output-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-29 21:10:29,399] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-29 21:10:29,400] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-29 21:10:30,489] INFO [Controller id=0] New topics: [Set(output-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-brayner,None,Map(output-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-29 21:10:30,489] INFO [Controller id=0] New partition creation callback for output-brayner-0 (kafka.controller.KafkaController)
[2023-07-29 21:10:36,285] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(0IANiYPdQ6qekIPAo4qCYw),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-29 21:10:36,285] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-07-29 21:14:02,504] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-29 21:14:02,504] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-29 21:14:02,505] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-29 21:14:02,506] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-29 21:17:20,021] DEBUG [Controller id=0] Delete topics listener fired for topics student-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-29 21:17:20,021] INFO [Controller id=0] Starting topic deletion for topics student-brayner (kafka.controller.KafkaController)
[2023-07-29 21:17:20,021] INFO [Topic Deletion Manager 0] Handling deletion for topics student-brayner (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:20,021] INFO [Topic Deletion Manager 0] Deletion of topic student-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:20,033] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(student-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-29 21:17:20,033] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=student-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:20,033] INFO [Topic Deletion Manager 0] Handling deletion for topics student-brayner (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:20,040] INFO [Topic Deletion Manager 0] Deletion of topic student-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:20,041] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-29 21:17:20,041] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-29 21:17:21,142] INFO [Controller id=0] New topics: [Set(student-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(student-brayner,None,Map(student-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-29 21:17:21,142] INFO [Controller id=0] New partition creation callback for student-brayner-0 (kafka.controller.KafkaController)
[2023-07-29 21:17:22,154] DEBUG [Controller id=0] Delete topics listener fired for topics classroom-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-29 21:17:22,154] INFO [Controller id=0] Starting topic deletion for topics classroom-brayner (kafka.controller.KafkaController)
[2023-07-29 21:17:22,154] INFO [Topic Deletion Manager 0] Handling deletion for topics classroom-brayner (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:22,154] INFO [Topic Deletion Manager 0] Deletion of topic classroom-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:22,164] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(classroom-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-29 21:17:22,164] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=classroom-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:22,164] INFO [Topic Deletion Manager 0] Handling deletion for topics classroom-brayner (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:22,172] INFO [Topic Deletion Manager 0] Deletion of topic classroom-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:22,172] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-29 21:17:22,173] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-29 21:17:23,282] INFO [Controller id=0] New topics: [Set(classroom-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(classroom-brayner,None,Map(classroom-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-29 21:17:23,282] INFO [Controller id=0] New partition creation callback for classroom-brayner-0 (kafka.controller.KafkaController)
[2023-07-29 21:17:24,321] DEBUG [Controller id=0] Delete topics listener fired for topics output-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-29 21:17:24,321] INFO [Controller id=0] Starting topic deletion for topics output-brayner (kafka.controller.KafkaController)
[2023-07-29 21:17:24,321] INFO [Topic Deletion Manager 0] Handling deletion for topics output-brayner (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:24,321] INFO [Topic Deletion Manager 0] Deletion of topic output-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:24,330] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(output-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-29 21:17:24,330] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:24,330] INFO [Topic Deletion Manager 0] Handling deletion for topics output-brayner (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:24,337] INFO [Topic Deletion Manager 0] Deletion of topic output-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-29 21:17:24,337] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-29 21:17:24,338] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-29 21:17:25,443] INFO [Controller id=0] New topics: [Set(output-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-brayner,None,Map(output-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-29 21:17:25,443] INFO [Controller id=0] New partition creation callback for output-brayner-0 (kafka.controller.KafkaController)
[2023-07-29 21:19:02,506] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-29 21:19:02,506] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-29 21:19:02,507] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-29 21:19:02,507] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-29 21:24:02,507] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-29 21:24:02,507] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-29 21:24:02,508] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-29 21:24:02,508] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-29 21:29:02,508] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-29 21:29:02,508] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-29 21:29:02,509] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-29 21:29:02,509] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-29 21:34:02,509] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-29 21:34:02,509] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-29 21:34:02,510] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-29 21:34:02,510] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-29 21:39:02,510] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-29 21:39:02,510] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-29 21:39:02,511] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-29 21:39:02,511] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-29 21:44:02,511] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-29 21:44:02,511] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-29 21:44:02,512] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-29 21:44:02,512] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-29 21:49:02,512] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-29 21:49:02,512] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-29 21:49:02,512] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-29 21:49:02,512] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-29 21:54:02,513] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-29 21:54:02,513] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-29 21:54:02,513] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-29 21:54:02,513] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-29 21:59:02,513] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-29 21:59:02,513] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-29 21:59:02,514] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-29 21:59:02,514] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
