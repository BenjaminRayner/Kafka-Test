[2023-07-30 21:00:55,118] DEBUG [Controller id=0] Delete topics listener fired for topics student-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:00:55,119] INFO [Controller id=0] Starting topic deletion for topics student-brayner (kafka.controller.KafkaController)
[2023-07-30 21:00:55,119] INFO [Topic Deletion Manager 0] Handling deletion for topics student-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:55,119] INFO [Topic Deletion Manager 0] Deletion of topic student-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:55,125] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(student-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:00:55,125] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=student-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:55,125] INFO [Topic Deletion Manager 0] Handling deletion for topics student-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:55,130] INFO [Topic Deletion Manager 0] Deletion of topic student-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:55,130] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:00:55,131] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:00:56,311] INFO [Controller id=0] New topics: [Set(student-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(student-brayner,None,Map(student-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:00:56,311] INFO [Controller id=0] New partition creation callback for student-brayner-0 (kafka.controller.KafkaController)
[2023-07-30 21:00:57,369] DEBUG [Controller id=0] Delete topics listener fired for topics classroom-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:00:57,369] INFO [Controller id=0] Starting topic deletion for topics classroom-brayner (kafka.controller.KafkaController)
[2023-07-30 21:00:57,369] INFO [Topic Deletion Manager 0] Handling deletion for topics classroom-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:57,369] INFO [Topic Deletion Manager 0] Deletion of topic classroom-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:57,376] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(classroom-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:00:57,376] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=classroom-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:57,376] INFO [Topic Deletion Manager 0] Handling deletion for topics classroom-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:57,382] INFO [Topic Deletion Manager 0] Deletion of topic classroom-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:57,382] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:00:57,382] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:00:58,583] INFO [Controller id=0] New topics: [Set(classroom-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(classroom-brayner,None,Map(classroom-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:00:58,583] INFO [Controller id=0] New partition creation callback for classroom-brayner-0 (kafka.controller.KafkaController)
[2023-07-30 21:00:59,635] DEBUG [Controller id=0] Delete topics listener fired for topics output-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:00:59,635] INFO [Controller id=0] Starting topic deletion for topics output-brayner (kafka.controller.KafkaController)
[2023-07-30 21:00:59,635] INFO [Topic Deletion Manager 0] Handling deletion for topics output-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:59,635] INFO [Topic Deletion Manager 0] Deletion of topic output-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:59,642] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(output-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:00:59,642] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:59,642] INFO [Topic Deletion Manager 0] Handling deletion for topics output-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:59,647] INFO [Topic Deletion Manager 0] Deletion of topic output-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:00:59,648] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:00:59,649] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:01:00,843] INFO [Controller id=0] New topics: [Set(output-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-brayner,None,Map(output-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:01:00,843] INFO [Controller id=0] New partition creation callback for output-brayner-0 (kafka.controller.KafkaController)
[2023-07-30 21:01:11,485] DEBUG [Controller id=0] Delete topics listener fired for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:01:11,485] INFO [Controller id=0] Starting topic deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog (kafka.controller.KafkaController)
[2023-07-30 21:01:11,485] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,485] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,487] DEBUG [Controller id=0] Delete topics listener fired for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog,A4Application-brayner-room-occupancy-changelog to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:01:11,487] INFO [Controller id=0] Starting topic deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog,A4Application-brayner-room-occupancy-changelog (kafka.controller.KafkaController)
[2023-07-30 21:01:11,487] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog,A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-changelog (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,487] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,487] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-room-occupancy-changelog (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,489] DEBUG [Controller id=0] Delete topics listener fired for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-repartition,A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog,A4Application-brayner-room-occupancy-changelog to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:01:11,489] INFO [Controller id=0] Starting topic deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-repartition,A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog,A4Application-brayner-room-occupancy-changelog (kafka.controller.KafkaController)
[2023-07-30 21:01:11,489] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog,A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-changelog,A4Application-brayner-room-occupancy-repartition (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,489] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-room-occupancy-repartition (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,492] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:01:11,492] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,492] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog,A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-changelog,A4Application-brayner-room-occupancy-repartition (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,498] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000004-changelog successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,498] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:01:11,498] DEBUG [Controller id=0] Delete topics listener fired for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-repartition,A4Application-brayner-room-occupancy-changelog to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:01:11,498] INFO [Controller id=0] Starting topic deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-repartition,A4Application-brayner-room-occupancy-changelog (kafka.controller.KafkaController)
[2023-07-30 21:01:11,498] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-changelog,A4Application-brayner-room-occupancy-repartition (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,498] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog-0 -> NONE, A4Application-brayner-room-occupancy-changelog-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:01:11,498] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,Partition=0,Replica=0],[Topic=A4Application-brayner-room-occupancy-changelog,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,498] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-changelog,A4Application-brayner-room-occupancy-repartition (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,505] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,509] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-room-occupancy-changelog successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,510] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:01:11,510] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(A4Application-brayner-room-occupancy-repartition-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:01:11,510] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=A4Application-brayner-room-occupancy-repartition,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,510] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-room-occupancy-repartition (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,514] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-room-occupancy-repartition successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:01:11,515] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:01:11,515] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:02:04,110] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:02:04,110] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:02:04,110] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:02:04,110] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-30 21:07:04,110] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:07:04,110] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:07:04,110] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:07:04,111] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-30 21:12:04,111] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:12:04,111] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:12:04,111] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:12:04,111] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-30 21:13:01,676] DEBUG [Controller id=0] Delete topics listener fired for topics student-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:13:01,676] INFO [Controller id=0] Starting topic deletion for topics student-brayner (kafka.controller.KafkaController)
[2023-07-30 21:13:01,676] INFO [Topic Deletion Manager 0] Handling deletion for topics student-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:01,676] INFO [Topic Deletion Manager 0] Deletion of topic student-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:01,676] INFO [RequestSendThread controllerId=0] Controller 0 connected to Ben-PC.:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-30 21:13:01,683] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(student-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:13:01,683] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=student-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:01,683] INFO [Topic Deletion Manager 0] Handling deletion for topics student-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:01,688] INFO [Topic Deletion Manager 0] Deletion of topic student-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:01,688] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:13:01,688] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:13:02,876] INFO [Controller id=0] New topics: [Set(student-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(student-brayner,None,Map(student-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:13:02,876] INFO [Controller id=0] New partition creation callback for student-brayner-0 (kafka.controller.KafkaController)
[2023-07-30 21:13:03,933] DEBUG [Controller id=0] Delete topics listener fired for topics classroom-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:13:03,933] INFO [Controller id=0] Starting topic deletion for topics classroom-brayner (kafka.controller.KafkaController)
[2023-07-30 21:13:03,933] INFO [Topic Deletion Manager 0] Handling deletion for topics classroom-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:03,933] INFO [Topic Deletion Manager 0] Deletion of topic classroom-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:03,940] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(classroom-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:13:03,940] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=classroom-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:03,940] INFO [Topic Deletion Manager 0] Handling deletion for topics classroom-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:03,946] INFO [Topic Deletion Manager 0] Deletion of topic classroom-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:03,946] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:13:03,946] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:13:05,152] INFO [Controller id=0] New topics: [Set(classroom-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(classroom-brayner,None,Map(classroom-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:13:05,152] INFO [Controller id=0] New partition creation callback for classroom-brayner-0 (kafka.controller.KafkaController)
[2023-07-30 21:13:06,206] DEBUG [Controller id=0] Delete topics listener fired for topics output-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:13:06,206] INFO [Controller id=0] Starting topic deletion for topics output-brayner (kafka.controller.KafkaController)
[2023-07-30 21:13:06,206] INFO [Topic Deletion Manager 0] Handling deletion for topics output-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:06,206] INFO [Topic Deletion Manager 0] Deletion of topic output-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:06,213] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(output-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:13:06,213] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:06,213] INFO [Topic Deletion Manager 0] Handling deletion for topics output-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:06,218] INFO [Topic Deletion Manager 0] Deletion of topic output-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:13:06,219] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:13:06,219] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:13:07,421] INFO [Controller id=0] New topics: [Set(output-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-brayner,None,Map(output-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:13:07,421] INFO [Controller id=0] New partition creation callback for output-brayner-0 (kafka.controller.KafkaController)
[2023-07-30 21:13:46,988] INFO [Controller id=0] New topics: [Set(A4Application-brayner-room-occupancy-repartition)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(A4Application-brayner-room-occupancy-repartition,Some(qyI0lo6gSVq4PMCFtm-9FA),Map(A4Application-brayner-room-occupancy-repartition-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:13:46,988] INFO [Controller id=0] New partition creation callback for A4Application-brayner-room-occupancy-repartition-0 (kafka.controller.KafkaController)
[2023-07-30 21:13:47,003] INFO [Controller id=0] New topics: [Set(A4Application-brayner-room-occupancy-changelog)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(A4Application-brayner-room-occupancy-changelog,Some(p1zrnKApSTumLw-S-cfxlw),Map(A4Application-brayner-room-occupancy-changelog-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:13:47,003] INFO [Controller id=0] New partition creation callback for A4Application-brayner-room-occupancy-changelog-0 (kafka.controller.KafkaController)
[2023-07-30 21:13:47,007] INFO [Controller id=0] New topics: [Set(A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,Some(ToYCNyjGTGSxk9G_2jRCQA),Map(A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:13:47,007] INFO [Controller id=0] New partition creation callback for A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog-0 (kafka.controller.KafkaController)
[2023-07-30 21:14:21,508] DEBUG [Controller id=0] Delete topics listener fired for topics student-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:14:21,508] INFO [Controller id=0] Starting topic deletion for topics student-brayner (kafka.controller.KafkaController)
[2023-07-30 21:14:21,508] INFO [Topic Deletion Manager 0] Handling deletion for topics student-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:21,508] INFO [Topic Deletion Manager 0] Deletion of topic student-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:21,515] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(student-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:14:21,515] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=student-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:21,515] INFO [Topic Deletion Manager 0] Handling deletion for topics student-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:21,520] INFO [Topic Deletion Manager 0] Deletion of topic student-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:21,520] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:14:21,520] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:14:22,714] INFO [Controller id=0] New topics: [Set(student-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(student-brayner,None,Map(student-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:14:22,714] INFO [Controller id=0] New partition creation callback for student-brayner-0 (kafka.controller.KafkaController)
[2023-07-30 21:14:23,776] DEBUG [Controller id=0] Delete topics listener fired for topics classroom-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:14:23,776] INFO [Controller id=0] Starting topic deletion for topics classroom-brayner (kafka.controller.KafkaController)
[2023-07-30 21:14:23,776] INFO [Topic Deletion Manager 0] Handling deletion for topics classroom-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:23,776] INFO [Topic Deletion Manager 0] Deletion of topic classroom-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:23,783] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(classroom-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:14:23,783] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=classroom-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:23,783] INFO [Topic Deletion Manager 0] Handling deletion for topics classroom-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:23,788] INFO [Topic Deletion Manager 0] Deletion of topic classroom-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:23,789] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:14:23,789] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:14:25,031] INFO [Controller id=0] New topics: [Set(classroom-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(classroom-brayner,None,Map(classroom-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:14:25,031] INFO [Controller id=0] New partition creation callback for classroom-brayner-0 (kafka.controller.KafkaController)
[2023-07-30 21:14:26,111] DEBUG [Controller id=0] Delete topics listener fired for topics output-brayner to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:14:26,111] INFO [Controller id=0] Starting topic deletion for topics output-brayner (kafka.controller.KafkaController)
[2023-07-30 21:14:26,111] INFO [Topic Deletion Manager 0] Handling deletion for topics output-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:26,111] INFO [Topic Deletion Manager 0] Deletion of topic output-brayner (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:26,119] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(output-brayner-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:14:26,119] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output-brayner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:26,119] INFO [Topic Deletion Manager 0] Handling deletion for topics output-brayner (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:26,125] INFO [Topic Deletion Manager 0] Deletion of topic output-brayner successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:26,125] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:14:26,125] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:14:27,330] INFO [Controller id=0] New topics: [Set(output-brayner)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(output-brayner,None,Map(output-brayner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:14:27,330] INFO [Controller id=0] New partition creation callback for output-brayner-0 (kafka.controller.KafkaController)
[2023-07-30 21:14:31,413] DEBUG [Controller id=0] Delete topics listener fired for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:14:31,413] INFO [Controller id=0] Starting topic deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog (kafka.controller.KafkaController)
[2023-07-30 21:14:31,413] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,413] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,415] DEBUG [Controller id=0] Delete topics listener fired for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-repartition,A4Application-brayner-room-occupancy-changelog to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:14:31,415] INFO [Controller id=0] Starting topic deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-repartition,A4Application-brayner-room-occupancy-changelog (kafka.controller.KafkaController)
[2023-07-30 21:14:31,415] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-changelog,A4Application-brayner-room-occupancy-repartition (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,415] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-room-occupancy-changelog (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,415] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-room-occupancy-repartition (re)started (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,420] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:14:31,420] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,420] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,A4Application-brayner-room-occupancy-changelog,A4Application-brayner-room-occupancy-repartition (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,426] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,426] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:14:31,427] DEBUG [Controller id=0] Delete topics listener fired for topics A4Application-brayner-room-occupancy-repartition,A4Application-brayner-room-occupancy-changelog to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:14:31,427] INFO [Controller id=0] Starting topic deletion for topics A4Application-brayner-room-occupancy-repartition,A4Application-brayner-room-occupancy-changelog (kafka.controller.KafkaController)
[2023-07-30 21:14:31,427] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-room-occupancy-changelog,A4Application-brayner-room-occupancy-repartition (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,427] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(A4Application-brayner-room-occupancy-repartition-0 -> NONE, A4Application-brayner-room-occupancy-changelog-0 -> NONE) (kafka.controller.KafkaController)
[2023-07-30 21:14:31,427] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=A4Application-brayner-room-occupancy-repartition,Partition=0,Replica=0],[Topic=A4Application-brayner-room-occupancy-changelog,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,427] INFO [Topic Deletion Manager 0] Handling deletion for topics A4Application-brayner-room-occupancy-changelog,A4Application-brayner-room-occupancy-repartition (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,433] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-room-occupancy-changelog successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,437] INFO [Topic Deletion Manager 0] Deletion of topic A4Application-brayner-room-occupancy-repartition successfully completed (kafka.controller.TopicDeletionManager)
[2023-07-30 21:14:31,437] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-07-30 21:14:31,438] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-07-30 21:14:36,509] INFO [Controller id=0] New topics: [Set(A4Application-brayner-room-occupancy-repartition)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(A4Application-brayner-room-occupancy-repartition,Some(GaduNIxAQC2w881tXeVT9A),Map(A4Application-brayner-room-occupancy-repartition-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:14:36,510] INFO [Controller id=0] New partition creation callback for A4Application-brayner-room-occupancy-repartition-0 (kafka.controller.KafkaController)
[2023-07-30 21:14:36,524] INFO [Controller id=0] New topics: [Set(A4Application-brayner-room-occupancy-changelog)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(A4Application-brayner-room-occupancy-changelog,Some(RUlVWzv6Tvmnt_sFlZKP5A),Map(A4Application-brayner-room-occupancy-changelog-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:14:36,524] INFO [Controller id=0] New partition creation callback for A4Application-brayner-room-occupancy-changelog-0 (kafka.controller.KafkaController)
[2023-07-30 21:14:36,529] INFO [Controller id=0] New topics: [Set(A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog,Some(DXEA36iBTL273KAO1QW9Sw),Map(A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-30 21:14:36,529] INFO [Controller id=0] New partition creation callback for A4Application-brayner-KSTREAM-REDUCE-STATE-STORE-0000000002-changelog-0 (kafka.controller.KafkaController)
[2023-07-30 21:17:04,111] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:17:04,111] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:17:04,111] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:17:04,111] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-30 21:22:04,112] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:22:04,112] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:22:04,112] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:22:04,112] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-30 21:27:04,113] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:27:04,113] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:27:04,113] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:27:04,113] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-30 21:32:04,113] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:32:04,113] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:32:04,114] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:32:04,114] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-30 21:37:04,114] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:37:04,114] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:37:04,115] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:37:04,115] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-30 21:42:04,116] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:42:04,116] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:42:04,117] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:42:04,117] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-30 21:47:04,117] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:47:04,117] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:47:04,117] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:47:04,117] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-30 21:52:04,117] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:52:04,118] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:52:04,118] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:52:04,118] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-30 21:57:04,118] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-30 21:57:04,118] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-30 21:57:04,118] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-30 21:57:04,118] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
